name: Common CD Steps

on:
  workflow_call:
    inputs:
      version_file:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
        description: "Docker Hub username"
      DOCKER_PASSWORD:
        required: true
        description: "Docker Hub password"
      GITHUB_TOKEN:
        required: true
        description: "GitHub token"


jobs:
  release_and_docker:
    runs-on: ubuntu-latest

    env:
      DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from config file
        id: get_version
        run: |
          VERSION=$(grep '^version' "${{ inputs.version_file }}" | sed 's/version = //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Log in to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker image with version tag
        run: docker build -t "${{ env.DOCKER_USERNAME }}/tone-track-image:${{ env.VERSION }}" -f "${{ inputs.dockerfile }}" .

      - name: Build Docker image with "latest" tag
        run: docker build -t "${{ env.DOCKER_USERNAME }}/tone-track-image:latest" -f "${{ inputs.dockerfile }}" .

      - name: Push Docker image with version tag
        run: docker push "${{ env.DOCKER_USERNAME }}/tone-track-image:${{ env.VERSION }}"

      - name: Push Docker image with "latest" tag
        run: docker push "${{ env.DOCKER_USERNAME }}/tone-track-image:latest"
