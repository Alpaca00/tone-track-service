version: "3.5"

services:
  app:
    build:
      dockerfile: devops/build/Dockerfile
      context: "."
    image: alpaca00/tone-track-local:latest
    networks:
      - tts_network
    env_file: .env
    ports:
      - "5002:5000"
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          memory: 2024M
          cpus: '0.75'
    command: sh -c "cd '/app' && python3 download_nltk_data.py && gunicorn -w 2 -k gthread --bind 0.0.0.0:5002 wsgi:app --timeout 500"
  postgres:
    image: postgres:15-alpine
    restart: always
    networks:
      - tts_network
    env_file: .env
#    volumes:
#      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis:7.4.1
    env_file: .env
    networks:
      - tts_network
    restart: always
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "6379:6379"
#    volumes:
#      - ./redis_data:/data
  nginx:
    image: fabiocicerchia/nginx-lua:1.27.2-ubuntu24.04
    env_file: .env
    networks:
      - tts_network
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - ./nginx/conf/:/etc/nginx/conf.d/
#      - ./certbot/www:/var/www/certbot/:ro
    depends_on:
      - app
#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw


networks:
  tts_network:
    driver: bridge
