upstream tts {
    server app:5002;
}

server {
    server_name tone-track.uno www.tone-track.uno;
    listen 80;

    # listen 443 ssl;
    # ssl_certificate      /etc/ssl/certificate.crt;
    # ssl_certificate_key  /etc/ssl/private.key;

    access_log /var/log/nginx/nginx.vhost.access.log;
    error_log  /var/log/nginx/nginx.vhost.error.log;

    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }

    location / {
        proxy_pass http://tts;
        proxy_connect_timeout   40;
        proxy_send_timeout      40;
        proxy_read_timeout      40;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/v1/proxy-sentiment-analysis {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        set_by_lua $api_key 'return os.getenv("API_KEY")';
        proxy_pass http://tts;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Authorization $api_key;
    }

}
